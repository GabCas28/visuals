{"version":3,"sources":["components/SpectrumGraph.js","components/DoughnutGraph.js","components/PieGraph.js","components/Home.js","components/Chromas.js","components/Navbar.js","components/Devices.js","App.js","serviceWorker.js","index.js"],"names":["getValue","message","parseInt","getMidi","SpectrumGraph","props","maxX","n_notes","div","ReactFauxDOM","Element","data","Array","from","messages","filter","e","color","d3","domain","map","d","margin","graphWidth","width","graphHeight","height","x","range","y","labels","xAxis","scale","tickFormat","svg","append","attr","call","selectAll","enter","toReact","DoughnutGraph","cent","ro","Math","min","pie","sort","value","arcPath","innerRadius","outerRadius","PieGraph","Home","className","id","Chromas","selectChromas","onChange","target","handleChange","withRouter","to","exact","Devices","devices","deselectDevice","selectDevice","testMessages","mounted","path","useLocation","pathname","button","device","classes","action","onClick","innerHTML","classList","toggle","handleClick","useEffect","length","deviceList","key","name","manufacturer","type","state","getDeviceList","App","test","Map","fill","_","i","setState","initialMessages","addMidiDevice","push","selected","selectedDevices","ele","midi","inputs","forEach","input","onmidimessage","onMIDIMessage","onMIDISuccess","midiAccess","console","log","listInputsAndOutputs","startLoggingMIDIInput","onMIDIFailure","msg","event","set","entry","routes","component","this","navigator","requestMIDIAccess","sysex","then","render","window","innerWidth","innerHeight","Component","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.723c8dc7.chunk.js","sourcesContent":["import ReactFauxDOM from 'react-faux-dom';\r\nimport './SpectrumGraph.css';\r\nimport * as d3 from 'd3';\r\n\r\nfunction getValue(message) {\r\n\treturn parseInt(message[1]);\r\n}\r\nfunction getMidi(message) {\r\n\treturn parseInt(message[0]);\r\n}\r\n\r\nfunction SpectrumGraph(props) {\r\n\tconst maxX = props.n_notes;\r\n\tconst maxY = 127;\r\n\r\n\tlet div = new ReactFauxDOM.Element('div');\r\n\r\n\tlet data = Array.from(props.messages).filter((e) => getMidi(e) < maxX);\r\n\r\n\tconst color = d3.scaleOrdinal(d3['schemeSet3']);\r\n\tcolor.domain(data.map((d) => getMidi(d)));\r\n\r\n\tlet margin = { top: 20, right: 40, bottom: 30, left: 40 },\r\n\t\tgraphWidth = props.width - margin.left - margin.right,\r\n\t\tgraphHeight = props.height - margin.top - margin.bottom;\r\n\r\n\tlet x = d3.scaleLinear().range([ 0, graphWidth ]);\r\n\tlet y = d3.scaleLinear().range([ graphHeight, 0 ]);\r\n\r\n\tlet labels = [ 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B' ];\r\n\tlet xAxis = d3.axisBottom().scale(x).tickFormat((d) => labels[d%12]);\r\n\t// let yAxis = d3.axisLeft().scale(y).ticks(4);\r\n\r\n\t//Pass it to d3.select and proceed as normal\r\n\tlet svg = d3\r\n\t\t.select(div)\r\n\t\t.append('svg')\r\n\t\t.attr('preserveAspectRatio', 'xMinYMin meet')\r\n\t\t.attr('viewBox', '0 0 ' + props.width + ' ' + props.height)\r\n\t\t// .attr('width', graphWidth + margin.left + margin.right)\r\n\t\t// .attr('height', graphHeight + margin.top + margin.bottom)\r\n\t\t.append('g')\r\n\t\t.attr('transform', `translate(${margin.left},${margin.top})`);\r\n\r\n\tx.domain([ 0, maxX ]);\r\n\ty.domain([ 0, maxY ]);\r\n\tlet xAxisRepr = svg\r\n\t\t.append('g')\r\n\t\t.attr('class', 'x axis')\r\n\t\t.attr('transform', `translate(${graphHeight / 20},${graphHeight})`)\r\n\t\t.call(xAxis);\r\n\r\n\txAxisRepr.selectAll(\"text\").attr(\"fill\",(d)=>color(d)).attr(\"stroke\",(d)=>color(d));\r\n\r\n\t// svg.append('g').attr('class', 'y axis').call(yAxis);\r\n\r\n\tsvg\r\n\t\t.selectAll('.bar')\r\n\t\t.data(data)\r\n\t\t.enter()\r\n\t\t.append('rect')\r\n\t\t.attr('class', 'bar')\r\n\t\t.attr('fill', (d) => color(getMidi(d)))\r\n\t\t.attr('x', (d) => x(getMidi(d)))\r\n\t\t.attr('width', graphWidth / maxX)\r\n\t\t.attr('y', (d) => y(getValue(d)))\r\n\t\t.attr('value', getValue)\r\n\t\t.attr('height', (d) => graphHeight - y(getValue(d)));\r\n\treturn div.toReact();\r\n}\r\n\r\nexport default SpectrumGraph;\r\n","import ReactFauxDOM from 'react-faux-dom';\r\nimport './SpectrumGraph.css';\r\nimport * as d3 from 'd3';\r\n\r\nfunction getValue(message) {\r\n\treturn parseInt(message[1]);\r\n}\r\nfunction getMidi(message) {\r\n\treturn parseInt(message[0]);\r\n}\r\n\r\nfunction DoughnutGraph(props) {\r\n\tconst maxX = props.n_notes;\r\n\tconst maxY = 127;\r\n\tlet div = new ReactFauxDOM.Element('div');\r\n\r\n\tlet data = Array.from(props.messages).filter((e) => getMidi(e) < maxX);\r\n\r\n\tconst color = d3.scaleOrdinal(d3['schemeSet3']);\r\n\tcolor.domain(data.map((d) => getMidi(d)));\r\n\r\n\tconst margin = { top: 20, right: 20, bottom: 20, left: 20 },\r\n\t\tgraphWidth = props.width - 50 - margin.left - margin.right,\r\n\t\tgraphHeight = props.height - margin.top - margin.bottom;\r\n\r\n\tconst cent = { x: graphWidth / 2 + 5, y: graphHeight / 2 + 5 };\r\n\r\n\tlet ro = d3.scaleLinear().range([ 0, (graphWidth / 2)-50 ]);\r\n\tlet y = d3.scaleLinear().range([ graphHeight, 0 ]);\r\n\r\n\tro.domain([ 0, Math.min(cent.x, cent.y) ]);\r\n\ty.domain([ 0, maxY ]);\r\n\r\n\tlet svg = d3\r\n\t\t.select(div)   \r\n\t\t.append('svg')\r\n\t\t.attr(\"preserveAspectRatio\", \"xMinYMin meet\")\r\n\t\t.attr(\"viewBox\", \"0 0 \"+graphWidth+\" \"+graphHeight)\r\n\t\t.append('g')\r\n\t\t.attr('transform', `translate(${cent.x},${cent.y})`);\r\n\r\n\tconst pie = d3.pie().sort(null).value((e) => getValue(e));\r\n\tconst arcPath = d3.arc().innerRadius(50).outerRadius((e) => 50+ro(e.value));\r\n\tconst paths = svg.selectAll('path').data(pie(data));\r\n\tpaths\r\n\t\t.enter()\r\n\t\t.append('path')\r\n\t\t.attr('class', 'arc')\r\n\t\t.attr('fill', (d) => color(getMidi(d.data)))\r\n\t\t.attr('d', (d) => arcPath(d))\r\n\t\t.attr('stroke', 'black')\r\n\t\t.attr('stroke-width', 3);\r\n\r\n\treturn div.toReact();\r\n}\r\n\r\nexport default DoughnutGraph;\r\n","import ReactFauxDOM from 'react-faux-dom';\r\nimport './SpectrumGraph.css';\r\nimport * as d3 from 'd3';\r\n\r\n\r\nfunction getValue(message) {\r\n\treturn parseInt(message[1]);\r\n}\r\nfunction getMidi(message) {\r\n\treturn parseInt(message[0]);\r\n}\r\n\r\nfunction PieGraph(props) {\r\n\tconst maxX = props.n_notes;\r\n\tconst maxY = 127;\r\n\tlet div = new ReactFauxDOM.Element('div');\r\n\r\n\tlet data = Array.from(props.messages).filter((e) => getMidi(e) < maxX);\r\n\r\n\tconst color = d3.scaleOrdinal(d3['schemeSet3']);\r\n\tcolor.domain(data.map((d) => getMidi(d)));\r\n\r\n\tconst margin = { top: 20, right: 20, bottom: 20, left: 20 },\r\n\t\tgraphWidth = props.width - 50 - margin.left - margin.right,\r\n\t\tgraphHeight = props.height - margin.top - margin.bottom;\r\n\r\n\tconst cent = { x: graphWidth / 2 + 5, y: graphHeight / 2 + 5 };\r\n\r\n\tlet ro = d3.scaleLinear().range([ 0, graphWidth / 2 ]);\r\n\tlet y = d3.scaleLinear().range([ graphHeight, 0 ]);\r\n\r\n\tro.domain([ 0, Math.min(cent.x, cent.y) ]);\r\n\ty.domain([ 0, maxY ]);\r\n\r\n\tlet svg = d3\r\n\t\t.select(div)\r\n\t\t.append('svg')\r\n\t\t.attr(\"preserveAspectRatio\", \"xMinYMin meet\")\r\n\t\t.attr(\"viewBox\", \"0 0 \"+graphWidth+\" \"+graphHeight)\r\n\t\t// .attr('width', graphWidth + margin.left + margin.right)\r\n\t\t// .attr('height', graphHeight + margin.top + margin.bottom)\r\n\t\t.append('g')\r\n\t\t.attr('transform', `translate(${cent.x},${cent.y})`);\r\n\r\n\tconst pie = d3.pie().sort(null).value((e) => 12);\r\n\tconst arcPath = d3.arc().innerRadius(0).outerRadius((e) => ro(getValue(e.data)));\r\n\tconst paths = svg.selectAll('path').data(pie(data));\r\n\tpaths\r\n\t\t.enter()\r\n\t\t.append('path')\r\n\t\t.attr('class', 'arc')\r\n\t\t.attr('fill', (d) => color(getMidi(d.data)))\r\n\t\t.attr('d', (d) => arcPath(d))\r\n\t\t.attr('stroke', 'black')\r\n\t\t.attr('stroke-width', 3);\r\n\r\n\treturn div.toReact();\r\n}\r\n\r\nexport default PieGraph;\r\n","import React from 'react';\r\nimport './Home.css';\r\nimport SpectrumGraph from './SpectrumGraph';\r\nimport DoughnutGraph from './DoughnutGraph';\r\nimport PieGraph from './PieGraph';\r\n\r\nfunction Home({ n_notes, messages }) {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<div id=\"graph-container\" className=\"card-panel black lighten-2 row\">\r\n\t\t\t\t<div className=\"col s12 m5\">\r\n\t\t\t\t\t<SpectrumGraph n_notes={n_notes} messages={messages} width=\"600\" height=\"400\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col s12 m7\">\r\n\t\t\t\t\t<div className=\"col s12 m6\">\r\n\t\t\t\t\t\t<DoughnutGraph n_notes={n_notes} messages={messages} width=\"400\" height=\"370\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col s12 m6\">\r\n\t\t\t\t\t\t<PieGraph n_notes={n_notes} messages={messages} width=\"400\" height=\"370\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './Devices.css';\r\n//function devices(props){\r\nfunction Chromas({ selectChromas }) {\r\n\tfunction handleChange(e) {\r\n        selectChromas(e.target.value);\r\n\t\t\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"col s12\">\r\n\t\t\t<select onChange={(e) => handleChange(e)}>\r\n\t\t\t\t<option value=\"12\">12 notes</option>\r\n\t\t\t\t<option value=\"24\">24 notes</option>\r\n\t\t\t\t<option value=\"36\">36 notes</option>\r\n\t\t\t\t<option value=\"48\">48 notes</option>\r\n\t\t\t\t<option value=\"60\">60 notes</option>\r\n\t\t\t\t<option value=\"72\">72 notes</option>\r\n\t\t\t\t<option value=\"84\">84 notes</option>\r\n\t\t\t\t<option value=\"96\">96 notes</option>\r\n\t\t\t\t<option value=\"108\">108 notes</option>\r\n\t\t\t\t<option value=\"120\">120 notes</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Chromas;\r\n","import React from 'react';\r\nimport { Link, NavLink, withRouter } from 'react-router-dom';\r\nimport Chromas from './Chromas';\r\nfunction Navbar(props) {\r\n\t// setTimeout(()=>{\r\n\t//     props.history.push('/about')\r\n\t// },2000)\r\n\treturn (\r\n\t\t<nav className=\"nav-wrapper blue-grey darken-4\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<Link to=\"/\" className=\"left brand-logo\">\r\n\t\t\t\t\tMidi Visuals\r\n\t\t\t\t</Link>\r\n\t\t\t\t<ul className=\"right\">\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<NavLink exact to=\"/\">\r\n\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<NavLink to=\"/bar\">Bar Chart</NavLink>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<NavLink to=\"/doughnut\">Doughnut Chart</NavLink>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<NavLink to=\"/pie\">Pie Chart</NavLink>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Chromas selectChromas={props.selectChromas}/>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n}\r\nexport default withRouter(Navbar);\r\n","import React, { useEffect } from 'react';\r\nimport './Devices.css';\r\nimport { useLocation } from 'react-router-dom'\r\n//function devices(props){\r\n\r\nfunction Devices({ devices, deselectDevice, selectDevice, testMessages, mounted }) {\r\n\tconst location = useLocation();\r\n\tconst path = location.pathname;\r\n\tfunction handleClick(e, device) {\r\n\t\tif (e.target.innerHTML === 'Mute') {\r\n\t\t\te.target.classList.toggle('green');\r\n\t\t\te.target.innerHTML = 'Listen';\r\n\t\t\tdeselectDevice(device);\r\n\t\t} else if (e.target.innerHTML === 'Listen') {\r\n\t\t\te.target.classList.toggle('green');\r\n\t\t\te.target.innerHTML = 'Mute';\r\n\t\t\tselectDevice(device);\r\n\t\t}\r\n\t}\r\n\tfunction button(device) {\r\n\t\tconst classes =\r\n\t\t\tdevice.action === 'listening'\r\n\t\t\t\t? 'col offset-s2 s1 devices btn lighten-4 purple'\r\n\t\t\t\t: 'col offset-s2 s1 devices btn lighten-4 green';\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\t\tclassName={classes}\r\n\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\thandleClick(e, device);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{device.action === 'listening' ? 'Mute' : 'Listen'}\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tif (mounted && devices.length === 0) {\r\n\t\t\ttestMessages();\r\n\t\t}\r\n\t});\r\n\tconst getDeviceList = (devices) => {\r\n\t\tif (devices.length > 0) {\r\n\t\t\treturn devices.map((device) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<li className=\"collection-item grey-text black row\" key={device.id}>\r\n\t\t\t\t\t\t<div className=\"col s2\">Device Name: {device.name}</div>\r\n\t\t\t\t\t\t<div className=\"col s3\">Manufacturer: {device.manufacturer} </div>\r\n\t\t\t\t\t\t<div className=\"col s1\">Type: {device.type}</div>\r\n\t\t\t\t\t\t<div className=\"col s3\">\r\n\t\t\t\t\t\t\tState: {device.state}, {device.action}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{button(device)}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<li className=\"collection-item grey-text black row\">\r\n\t\t\t\t\t<div className=\"center col s12\">No Midi devices found.</div>\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\tconst deviceList = getDeviceList(devices);\r\n\treturn <div className={(path ===\"/\")?\"\":\"hide\"}><ul className=\"collection\">{deviceList}</ul></div>;\r\n}\r\nexport default Devices;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport SpectrumGraph from './components/SpectrumGraph';\nimport DoughnutGraph from './components/DoughnutGraph';\nimport Navbar from './components/Navbar';\nimport { HashRouter, Route } from 'react-router-dom';\nimport PieGraph from './components/PieGraph';\nimport Devices from './components/Devices';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tn_notes: 12,\n\t\t\tdevices: [],\n\t\t\tselectedDevices: [],\n\t\t\tmessages: new Map([]),\n\t\t\ttest: false,\n\t\t\tmounted: false\n\t\t};\n\t}\n\ttestMessages = () => {\n\t\tif (this.state.test === false) {\n\t\t\tlet messages = new Map(\n\t\t\t\tArray(120).fill().map((_, i) => {\n\t\t\t\t\treturn [ i, i * (127 / this.state.n_notes) ];\n\t\t\t\t})\n\t\t\t);\n\t\t\tthis.setState({\n\t\t\t\tmessages: messages,\n\t\t\t\ttest: true\n\t\t\t});\n\t\t}\n\t};\n\tinitialMessages = () => {\n\t\tlet messages = new Map(\n\t\t\tArray(128).fill().map((_, i) => {\n\t\t\t\treturn [ i, 0 ];\n\t\t\t})\n\t\t);\n\t\tthis.setState({\n\t\t\tmessages: messages\n\t\t});\n\t};\n\n\taddMidiDevice = (device) => {\n\t\t// we copy the array and alter the copy\n\t\tvar devices = this.state.devices;\n\t\tdevices.push(device);\n\t\t// we set the new array as state\n\t\tthis.setState({\n\t\t\tdevices: devices\n\t\t});\n\t};\n\tdeselectDevice = (device) => {\n\t\tlet selected = this.state.selectedDevices;\n\t\tselected = selected.filter(function(ele) {\n\t\t\treturn ele !== device;\n\t\t});\n\t\tthis.state.midi.inputs.forEach((input) => {\n\t\t\tif (input === device) {\n\t\t\t\tinput.onmidimessage = null;\n\t\t\t\tinput.action = 'not listening';\n\t\t\t}\n\t\t});\n\t\tthis.setState({\n\t\t\tselectedDevices: selected\n\t\t});\n\t};\n\n\tselectDevice = (device) => {\n\t\tlet selected = this.state.selectedDevices;\n\t\tselected.push(device);\n\t\tthis.state.midi.inputs.forEach((input) => {\n\t\t\tif (input === device) {\n\t\t\t\tinput.onmidimessage = this.onMIDIMessage;\n\t\t\t\tinput.action = 'listening';\n\t\t\t}\n\t\t});\n\t\tthis.setState({\n\t\t\tselectedDevices: selected\n\t\t});\n\t};\n\tcomponentDidMount() {\n\t\tthis.initialMessages();\n\t\tnavigator.requestMIDIAccess({ sysex: true }).then(this.onMIDISuccess, this.onMIDIFailure);\n\t}\n\t//componentDidUpdate(prevProps, prevState) {}\n\tonMIDISuccess = (midiAccess) => {\n\t\tconsole.log('MIDI ready!');\n\t\t// console.log(midiAccess);\n\t\tthis.setState({\n\t\t\tmidi: midiAccess,\n\t\t\tmounted: true\n\t\t});\n\t\t// midi = midiAccess;  // store in the global (in real usage, would probably keep in an object instance)\n\t\tthis.listInputsAndOutputs(midiAccess);\n\t\tthis.startLoggingMIDIInput(midiAccess);\n\t};\n\n\tonMIDIFailure = (msg) => {\n\t\tconsole.log('Failed to get MIDI access - ' + msg);\n\t};\n\n\tlistInputsAndOutputs = (midiAccess) => {\n\t\t//'MIDI INPUTS'\n\t\tmidiAccess.inputs.forEach((input) => {\n\t\t\tthis.addMidiDevice(input);\n\t\t\tthis.selectDevice(input);\n\t\t});\n\t\t//'MIDI OUTPUTS'\n\t\t//midiAccess.outputs.forEach(function(output) {});\n\t};\n\n\tonMIDIMessage = (event) => {\n\t\tlet messages = this.state.messages;\n\t\tmessages.set(event.data[1], event.data[2]);\n\t\tthis.setState({\n\t\t\tmessages: messages\n\t\t});\n\t};\n\n\tstartLoggingMIDIInput = (midiAccess) => {\n\t\tmidiAccess.inputs.forEach((entry) => {\n\t\t\tentry.onmidimessage = this.onMIDIMessage;\n\t\t});\n\t};\n\troutes = [ { path: '/', component: 'Home' } ];\n\tselectChromas = (n_notes) => {\n\t\tthis.setState({\n\t\t\tn_notes: n_notes,\n\t\t\ttest: false\n\t\t});\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<HashRouter>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<Navbar selectChromas={this.selectChromas} />\n\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t<Devices\n\t\t\t\t\t\t\tmounted={this.state.mounted}\n\t\t\t\t\t\t\tdevices={this.state.devices}\n\t\t\t\t\t\t\tdeselectDevice={this.deselectDevice}\n\t\t\t\t\t\t\tselectDevice={this.selectDevice}\n\t\t\t\t\t\t\ttestMessages={this.testMessages}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* Exact attribute to match the precise url */}\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t\t<Home\n\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\tmounted={this.state.mounted}\n\t\t\t\t\t\t\t\tdevices={this.state.devices}\n\t\t\t\t\t\t\t\tselectDevice={this.selectDevice}\n\t\t\t\t\t\t\t\tdeselectDevice={this.deselectDevice}\n\t\t\t\t\t\t\t\tmessages={this.state.messages}\n\t\t\t\t\t\t\t\tn_notes={this.state.n_notes}\n\t\t\t\t\t\t\t\ttestMessages={this.testMessages}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/doughnut\"\n\t\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t\t<DoughnutGraph\n\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\tn_notes={this.state.n_notes}\n\t\t\t\t\t\t\t\tmessages={this.state.messages}\n\t\t\t\t\t\t\t\twidth={window.innerWidth}\n\t\t\t\t\t\t\t\theight={window.innerHeight - 100}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/pie\"\n\t\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t\t<PieGraph\n\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\tn_notes={this.state.n_notes}\n\t\t\t\t\t\t\t\tmessages={this.state.messages}\n\t\t\t\t\t\t\t\twidth={window.innerWidth}\n\t\t\t\t\t\t\t\theight={window.innerHeight - 100}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/bar\"\n\t\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t\t<SpectrumGraph\n\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\tn_notes={this.state.n_notes}\n\t\t\t\t\t\t\t\tmessages={this.state.messages}\n\t\t\t\t\t\t\t\twidth={window.innerWidth}\n\t\t\t\t\t\t\t\theight={window.innerHeight - 100}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</HashRouter>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}